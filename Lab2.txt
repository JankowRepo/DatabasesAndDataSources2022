CREATE TABLE COUNTRIES AS SELECT * FROM HR.COUNTRIES;
CREATE TABLE DEPARTMENTS AS SELECT * FROM HR.DEPARTMENTS;
CREATE TABLE EMPLOYEES AS SELECT * FROM HR.EMPLOYEES;
CREATE TABLE JOB_GRADES AS SELECT * FROM HR.JOB_GRADES;
CREATE TABLE JOB_HISTORY AS SELECT * FROM HR.JOB_HISTORY;
CREATE TABLE JOBS AS SELECT * FROM HR.JOBS;
CREATE TABLE LOCATIONS AS SELECT * FROM HR.LOCATIONS;
CREATE TABLE REGIONS AS SELECT * FROM HR.REGIONS;

ALTER TABLE job_history
ADD PRIMARY KEY (employee_id,start_date);

ALTER TABLE countries
ADD PRIMARY KEY (country_id);

ALTER TABLE departments
ADD PRIMARY KEY (department_id);

ALTER TABLE employees
ADD PRIMARY KEY (employee_id);

ALTER TABLE jobs
ADD PRIMARY KEY (job_id);

ALTER TABLE locations
ADD PRIMARY KEY (location_id);

ALTER TABLE regions
ADD PRIMARY KEY (region_id);

ALTER TABLE countries
ADD FOREIGN KEY (region_id) REFERENCES regions(region_id);

ALTER TABLE departments
ADD FOREIGN KEY (manager_id) REFERENCES employees(employee_id);

ALTER TABLE departments
ADD FOREIGN KEY (location_id) REFERENCES locations(location_id);

ALTER TABLE employees
ADD FOREIGN KEY (job_id) REFERENCES jobs(job_id);

ALTER TABLE employees
ADD FOREIGN KEY (manager_id) REFERENCES employees(employee_id);

ALTER TABLE employees
ADD FOREIGN KEY (department_id) REFERENCES departments(department_id);

ALTER TABLE job_history
ADD FOREIGN KEY (job_id) REFERENCES jobs(job_id);

ALTER TABLE job_history
ADD FOREIGN KEY (department_id) REFERENCES departments(department_id);

ALTER TABLE locations
ADD FOREIGN KEY (country_id) REFERENCES countries(country_id);






SELECT CONCAT(LAST_NAME,Concat(' ',Salary) ) AS Wynagrodzenie 
    FROM EMPLOYEES 
    where (department_id=20 or department_id=50) 
    and salary<=7000 
    and salary>=2000
    order by Wynagrodzenie;
    

SELECT Hire_date, Last_name
    FROM EMPLOYEES 
    where manager_id is not null
    and hire_date > date '2004-12-31'
    and hire_date < date '2006-01-01'
    order by &picked_Column;
    
             
SELECT CONCAT(CONCAT(first_name, ' '), last_name) AS name, salary, phone_number
    FROM employees 
    WHERE INSTR(last_name, 'e', 3, 1) = 3 
    AND INSTR(first_name, '&name_path', 1, 1) != 0 
    ORDER BY name DESC;
             

Select first_name, Last_name, Round(MONTHS_BETWEEN(sysdate, hire_date)) as miesiace,
    Case 
        when Round(MONTHS_BETWEEN(sysdate, hire_date))<150 then '10%'
        when Round(MONTHS_BETWEEN(sysdate, hire_date))>200 then '30%'
        else '20%' 
    end dodatek
    from employees
    order by miesiace;


Select department_id, sum(salary) as sum_salary, round(avg(salary)) as average_salary
    from employees
    where salary>5000
    Order by average_salary desc;
    
Select employees.last_name, employees.Department_ID,
    departments.Department_name, employees.job_id 
    from Employees join departments 
        on employees.department_id=departments.department_id 
    join locations
        on departments.location_id=locations.location_id
    where locations.city='Toronto'
    

Select employees.first_name, employees.last_name 
    from employees join departments 
        on employees.department_id=departments.department_id
    where employees.first_name='Jennifer' 
        or departments.department_id in (select employees.department_id from employees where employees.first_name='Jennifer')
    

Select department_name, department_id from departments
    where department_id not in (select distinct department_id from employees where department_id!=null)
    

Select e1.first_name, e1.last_name, e1.job_id, d1.department_name, e1.salary,(SELECT grade FROM job_grades WHERE e1.salary BETWEEN min_salary AND max_salary) AS grade
    from employees e1
        join departments d1 on e1.department_id=d1.department_id 
        
 
        
select first_name, last_name, salary from employees
    where salary>(select avg(e2.salary) from employees e2)
    order by salary desc
    


select employee_id, first_name, last_name, salary from employees
    where department_id in 
        (select distinct e2.department_id 
            from employees e2 where e2.last_name like '%u%')




    
    
Wyklad 19.10.2022:
Select last_name,department_id,salary
    from Employees e1
    where employees.salary>(Select avg(salary) from employees
        where e1.department_id=department_id);


Select j2.job_title, j1.job_title,j1.min_salary 
    from jobs j1 Join jobs j2 
    on j1.min_salary = j2.min_salary
    where j2.job_title>j1.job_title
    